# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ 
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/1ad93386-53ed-44ac-99ad-98376cceae73";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-f8c018eb-e540-496d-b915-df26b8eef139".device = "/dev/disk/by-uuid/f8c018eb-e540-496d-b915-df26b8eef139";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9A91-2A7D";
      fsType = "vfat";
    };
  fileSystems."/games" = 
  {
    device = "/dev/disk/by-uuid/a6e8dbef-dfb7-4807-8a9b-dd0c4a4d5316";
    fsType = "ext4";
    options = [ "nofail" ];
  };
  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0f0u10u2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
